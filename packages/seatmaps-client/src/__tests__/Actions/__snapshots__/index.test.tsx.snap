// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Actions when controls are visible on desktop browsers matches snapshot 1`] = `
<Actions
  onClearSelection={[MockFunction]}
  onResetZoom={[MockFunction]}
  onZoomIn={[MockFunction]}
  onZoomOut={[MockFunction]}
  ranges={[]}
  showControls={true}
  showLegend={true}
>
  <div
    data-testid="seatmaps-actions-menu"
    style={
      {
        "alignItems": "flex-start",
        "bottom": 10,
        "display": "flex",
        "fontSize": "0.75em",
        "justifyContent": "space-between",
        "left": 10,
        "maxWidth": "100%",
        "opacity": 0.9,
        "pointerEvents": "none",
        "position": "absolute",
        "right": 10,
        "top": 10,
        "whiteSpace": "nowrap",
      }
    }
  >
    <_default>
      <div
        style={
          {
            "backgroundColor": "white",
            "border": "2px solid lightgray",
            "borderRadius": 5,
            "display": "flex",
            "pointerEvents": "all",
          }
        }
      >
        <Button
          data-custom-at="right"
          data-rh="Default"
          data-testid="zoom-in"
          icon={<IconPlus />}
          isMobile={false}
          name="zoom-in"
          onClick={[MockFunction]}
          style={
            {
              "borderRight": "2px solid lightgray",
            }
          }
        >
          <div
            data-custom-at="right"
            data-rh="Default"
            data-testid="zoom-in"
            name="zoom-in"
            onClick={[MockFunction]}
            style={
              {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "border": "none",
                "borderRadius": 0,
                "borderRight": "2px solid lightgray",
                "cursor": "pointer",
                "display": "flex",
                "gap": "6px",
                "justifyContent": "center",
                "outline": "none",
                "padding": "0.5em 1em",
              }
            }
          >
            <IconPlus>
              <svg
                height="16"
                viewBox="0 0 448 512"
                width="14"
              >
                <path
                  d="M256 80c0-17.7-14.3-32-32-32s-32 14.3-32 32v144H48c-17.7 0-32 14.3-32 32s14.3 32 32 32h144v144c0 17.7 14.3 32 32 32s32-14.3 32-32V288h144c17.7 0 32-14.3 32-32s-14.3-32-32-32H256V80z"
                  fill="currentColor"
                />
              </svg>
            </IconPlus>
          </div>
        </Button>
        <Button
          data-testid="zoom-out"
          icon={<IconMinus />}
          isMobile={false}
          name="zoom-out"
          onClick={[MockFunction]}
          style={
            {
              "borderRight": "2px solid lightgray",
            }
          }
        >
          <div
            data-testid="zoom-out"
            name="zoom-out"
            onClick={[MockFunction]}
            style={
              {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "border": "none",
                "borderRadius": 0,
                "borderRight": "2px solid lightgray",
                "cursor": "pointer",
                "display": "flex",
                "gap": "6px",
                "justifyContent": "center",
                "outline": "none",
                "padding": "0.5em 1em",
              }
            }
          >
            <IconMinus>
              <svg
                height="16"
                viewBox="0 0 448 512"
                width="14"
              >
                <path
                  d="M432 256c0 17.7-14.3 32-32 32H48c-17.7 0-32-14.3-32-32s14.3-32 32-32h352c17.7 0 32 14.3 32 32z"
                  fill="currentColor"
                />
              </svg>
            </IconMinus>
          </div>
        </Button>
        <Button
          data-testid="reset-zoom"
          icon={<IconUndo />}
          isMobile={false}
          name="reset-zoom"
          onClick={[MockFunction]}
          style={
            {
              "borderRight": "2px solid lightgray",
            }
          }
          text="Reset Zoom"
        >
          <div
            data-testid="reset-zoom"
            name="reset-zoom"
            onClick={[MockFunction]}
            style={
              {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "border": "none",
                "borderRadius": 0,
                "borderRight": "2px solid lightgray",
                "cursor": "pointer",
                "display": "flex",
                "gap": "6px",
                "justifyContent": "center",
                "outline": "none",
                "padding": "0.5em 1em",
              }
            }
          >
            <IconUndo>
              <svg
                height="16"
                viewBox="0 0 512 512"
                width="16"
              >
                <path
                  d="M48.5 224H40c-13.3 0-24-10.7-24-24V72c0-9.7 5.8-18.5 14.8-22.2S50.1 48.1 57 55l41.6 41.6c87.6-86.5 228.7-86.2 315.8 1 87.5 87.5 87.5 229.3 0 316.8s-229.3 87.5-316.8 0c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0c62.5 62.5 163.8 62.5 226.3 0s62.5-163.8 0-226.3c-62.2-62.2-162.7-62.5-225.3-1L185 183c6.9 6.9 8.9 17.2 5.2 26.2S177.7 224 168 224H48.5z"
                  fill="currentColor"
                />
              </svg>
            </IconUndo>
            Reset Zoom
          </div>
        </Button>
        <Button
          className="clear-selection"
          icon={<IconClose />}
          isMobile={false}
          name="clear-selection"
          onClick={[MockFunction]}
          style={
            {
              "borderRight": undefined,
            }
          }
          text="Clear All"
        >
          <div
            className="clear-selection"
            name="clear-selection"
            onClick={[MockFunction]}
            style={
              {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "border": "none",
                "borderRadius": 0,
                "borderRight": undefined,
                "cursor": "pointer",
                "display": "flex",
                "gap": "6px",
                "justifyContent": "center",
                "outline": "none",
                "padding": "0.5em 1em",
              }
            }
          >
            <IconClose>
              <svg
                height="16"
                viewBox="0 0 512 512"
                width="16"
              >
                <path
                  d="M256 512a256 256 0 1 0 0-512 256 256 0 1 0 0 512zm-81-337c9.4-9.4 24.6-9.4 33.9 0l47 47 47-47c9.4-9.4 24.6-9.4 33.9 0s9.4 24.6 0 33.9l-47 47 47 47c9.4 9.4 9.4 24.6 0 33.9s-24.6 9.4-33.9 0l-47-47-47 47c-9.4 9.4-24.6 9.4-33.9 0s-9.4-24.6 0-33.9l47-47-47-47c-9.4-9.4-9.4-24.6 0-33.9z"
                  fill="currentColor"
                />
              </svg>
            </IconClose>
            Clear All
          </div>
        </Button>
      </div>
    </_default>
    <_default>
      <div
        style={
          {
            "backgroundColor": "white",
            "border": "2px solid lightgray",
            "borderRadius": 5,
            "display": "flex",
            "pointerEvents": "all",
          }
        }
      >
        <Legend
          isMobile={false}
          ranges={[]}
        >
          <div
            style={
              {
                "position": "relative",
              }
            }
          >
            <Button
              icon={<IconChevronDown />}
              isMobile={false}
              onClick={[Function]}
              text="Show Map Legend"
            >
              <div
                onClick={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "backgroundColor": "transparent",
                    "border": "none",
                    "borderRadius": 0,
                    "cursor": "pointer",
                    "display": "flex",
                    "gap": "6px",
                    "justifyContent": "center",
                    "outline": "none",
                    "padding": "0.5em 1em",
                  }
                }
              >
                <IconChevronDown>
                  <svg
                    height="16"
                    viewBox="0 0 512 512"
                    width="16"
                  >
                    <path
                      d="M233.4 406.6c12.5 12.5 32.8 12.5 45.3 0l192-192c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L256 338.7 86.6 169.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l192 192z"
                      fill="currentColor"
                    />
                  </svg>
                </IconChevronDown>
                Show Map Legend
              </div>
            </Button>
          </div>
        </Legend>
      </div>
    </_default>
  </div>
</Actions>
`;

exports[`Actions when controls are visible on mobile browsers matches snapshot 1`] = `
<Actions
  onClearSelection={[MockFunction]}
  onResetZoom={[MockFunction]}
  onZoomIn={[MockFunction]}
  onZoomOut={[MockFunction]}
  ranges={[]}
  showControls={true}
  showLegend={true}
>
  <div
    data-testid="seatmaps-actions-menu"
    style={
      {
        "alignItems": "flex-start",
        "bottom": 10,
        "display": "flex",
        "fontSize": "0.75em",
        "justifyContent": "space-between",
        "left": 10,
        "maxWidth": "100%",
        "opacity": 0.9,
        "pointerEvents": "none",
        "position": "absolute",
        "right": 10,
        "top": 10,
        "whiteSpace": "nowrap",
      }
    }
  >
    <_default>
      <div
        style={
          {
            "backgroundColor": "white",
            "border": "2px solid lightgray",
            "borderRadius": 5,
            "display": "flex",
            "pointerEvents": "all",
          }
        }
      >
        <Button
          data-custom-at="right"
          data-rh="Default"
          data-testid="zoom-in"
          icon={<IconPlus />}
          isMobile={false}
          name="zoom-in"
          onClick={[MockFunction]}
          style={
            {
              "borderRight": "2px solid lightgray",
            }
          }
        >
          <div
            data-custom-at="right"
            data-rh="Default"
            data-testid="zoom-in"
            name="zoom-in"
            onClick={[MockFunction]}
            style={
              {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "border": "none",
                "borderRadius": 0,
                "borderRight": "2px solid lightgray",
                "cursor": "pointer",
                "display": "flex",
                "gap": "6px",
                "justifyContent": "center",
                "outline": "none",
                "padding": "0.5em 1em",
              }
            }
          >
            <IconPlus>
              <svg
                height="16"
                viewBox="0 0 448 512"
                width="14"
              >
                <path
                  d="M256 80c0-17.7-14.3-32-32-32s-32 14.3-32 32v144H48c-17.7 0-32 14.3-32 32s14.3 32 32 32h144v144c0 17.7 14.3 32 32 32s32-14.3 32-32V288h144c17.7 0 32-14.3 32-32s-14.3-32-32-32H256V80z"
                  fill="currentColor"
                />
              </svg>
            </IconPlus>
          </div>
        </Button>
        <Button
          data-testid="zoom-out"
          icon={<IconMinus />}
          isMobile={false}
          name="zoom-out"
          onClick={[MockFunction]}
          style={
            {
              "borderRight": "2px solid lightgray",
            }
          }
        >
          <div
            data-testid="zoom-out"
            name="zoom-out"
            onClick={[MockFunction]}
            style={
              {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "border": "none",
                "borderRadius": 0,
                "borderRight": "2px solid lightgray",
                "cursor": "pointer",
                "display": "flex",
                "gap": "6px",
                "justifyContent": "center",
                "outline": "none",
                "padding": "0.5em 1em",
              }
            }
          >
            <IconMinus>
              <svg
                height="16"
                viewBox="0 0 448 512"
                width="14"
              >
                <path
                  d="M432 256c0 17.7-14.3 32-32 32H48c-17.7 0-32-14.3-32-32s14.3-32 32-32h352c17.7 0 32 14.3 32 32z"
                  fill="currentColor"
                />
              </svg>
            </IconMinus>
          </div>
        </Button>
        <Button
          data-testid="reset-zoom"
          icon={<IconUndo />}
          isMobile={false}
          name="reset-zoom"
          onClick={[MockFunction]}
          style={
            {
              "borderRight": "2px solid lightgray",
            }
          }
          text="Reset Zoom"
        >
          <div
            data-testid="reset-zoom"
            name="reset-zoom"
            onClick={[MockFunction]}
            style={
              {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "border": "none",
                "borderRadius": 0,
                "borderRight": "2px solid lightgray",
                "cursor": "pointer",
                "display": "flex",
                "gap": "6px",
                "justifyContent": "center",
                "outline": "none",
                "padding": "0.5em 1em",
              }
            }
          >
            <IconUndo>
              <svg
                height="16"
                viewBox="0 0 512 512"
                width="16"
              >
                <path
                  d="M48.5 224H40c-13.3 0-24-10.7-24-24V72c0-9.7 5.8-18.5 14.8-22.2S50.1 48.1 57 55l41.6 41.6c87.6-86.5 228.7-86.2 315.8 1 87.5 87.5 87.5 229.3 0 316.8s-229.3 87.5-316.8 0c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0c62.5 62.5 163.8 62.5 226.3 0s62.5-163.8 0-226.3c-62.2-62.2-162.7-62.5-225.3-1L185 183c6.9 6.9 8.9 17.2 5.2 26.2S177.7 224 168 224H48.5z"
                  fill="currentColor"
                />
              </svg>
            </IconUndo>
            Reset Zoom
          </div>
        </Button>
        <Button
          className="clear-selection"
          icon={<IconClose />}
          isMobile={false}
          name="clear-selection"
          onClick={[MockFunction]}
          style={
            {
              "borderRight": undefined,
            }
          }
          text="Clear All"
        >
          <div
            className="clear-selection"
            name="clear-selection"
            onClick={[MockFunction]}
            style={
              {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "border": "none",
                "borderRadius": 0,
                "borderRight": undefined,
                "cursor": "pointer",
                "display": "flex",
                "gap": "6px",
                "justifyContent": "center",
                "outline": "none",
                "padding": "0.5em 1em",
              }
            }
          >
            <IconClose>
              <svg
                height="16"
                viewBox="0 0 512 512"
                width="16"
              >
                <path
                  d="M256 512a256 256 0 1 0 0-512 256 256 0 1 0 0 512zm-81-337c9.4-9.4 24.6-9.4 33.9 0l47 47 47-47c9.4-9.4 24.6-9.4 33.9 0s9.4 24.6 0 33.9l-47 47 47 47c9.4 9.4 9.4 24.6 0 33.9s-24.6 9.4-33.9 0l-47-47-47 47c-9.4 9.4-24.6 9.4-33.9 0s-9.4-24.6 0-33.9l47-47-47-47c-9.4-9.4-9.4-24.6 0-33.9z"
                  fill="currentColor"
                />
              </svg>
            </IconClose>
            Clear All
          </div>
        </Button>
      </div>
    </_default>
    <_default>
      <div
        style={
          {
            "backgroundColor": "white",
            "border": "2px solid lightgray",
            "borderRadius": 5,
            "display": "flex",
            "pointerEvents": "all",
          }
        }
      >
        <Legend
          isMobile={false}
          ranges={[]}
        >
          <div
            style={
              {
                "position": "relative",
              }
            }
          >
            <Button
              icon={<IconChevronDown />}
              isMobile={false}
              onClick={[Function]}
              text="Show Map Legend"
            >
              <div
                onClick={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "backgroundColor": "transparent",
                    "border": "none",
                    "borderRadius": 0,
                    "cursor": "pointer",
                    "display": "flex",
                    "gap": "6px",
                    "justifyContent": "center",
                    "outline": "none",
                    "padding": "0.5em 1em",
                  }
                }
              >
                <IconChevronDown>
                  <svg
                    height="16"
                    viewBox="0 0 512 512"
                    width="16"
                  >
                    <path
                      d="M233.4 406.6c12.5 12.5 32.8 12.5 45.3 0l192-192c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L256 338.7 86.6 169.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l192 192z"
                      fill="currentColor"
                    />
                  </svg>
                </IconChevronDown>
                Show Map Legend
              </div>
            </Button>
          </div>
        </Legend>
      </div>
    </_default>
  </div>
</Actions>
`;
